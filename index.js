document.addEventListener("DOMContentLoaded", function () {
  const expensesList = document.getElementById("item-list-expenses");
  const incomeList = document.getElementById("item-list-income");
  const expensesTotalElement = document.getElementById("expenses-total");
  const incomeTotalElement = document.getElementById("income-total");
  const totalElement = document.getElementById("total");

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ Local Storage –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  let expenses = JSON.parse(localStorage.getItem("expenses")) || [];
  let income = JSON.parse(localStorage.getItem("income")) || [];
  let total = parseFloat(localStorage.getItem("total")) || 0;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  function updateTotalValues() {
    expensesTotalElement.textContent = expenses.reduce(
      (total, expense) => total + expense.value,
      0
    );
    incomeTotalElement.textContent = income.reduce(
      (total, income) => total + income.value,
      0
    );
    total =
      parseFloat(incomeTotalElement.textContent) -
      parseFloat(expensesTotalElement.textContent);
    const totalBalanse = (total) => {
      if (total > 0) {
        // totalElement.classList.add("text-green-500");
        return "Mo≈ºesz jeszcze wydaƒá " + total + " z≈Çotych";
      } else if (total === 0) {
        // totalElement.classList.add("text-red-500");
        return "Bilans wynosi zero";
      } else {
        // totalElement.classList.add("text-red-500");
        return (
          "Bilans jest ujemny. Jeste≈õ na minusie " +
          Math.abs(total) +
          " z≈Çotych"
        );
      }
    };
    totalElement.textContent = totalBalanse(total);
    incomeTotalElement.classList.add("font-semibold");
    expensesTotalElement.classList.add("font-semibold");
    localStorage.setItem("expenses", JSON.stringify(expenses));
    localStorage.setItem("income", JSON.stringify(income));
    localStorage.setItem("total", total);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫
  function addItemToList(list, item) {
    const li = document.createElement("li");
    li.textContent = `${item.name} - ${item.value} z≈Ç`;
    list.insertBefore(li, list.firstChild);
  }

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  expenses.forEach((expense) => addItemToList(expensesList, expense));
  income.forEach((item) => addItemToList(incomeList, item));

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
  document
    .getElementById("add-button-expenses")
    .addEventListener("click", function () {
      const name = document.getElementById("new-item-expenses").value;
      const value = parseFloat(
        document.getElementById("new-item-expenses-value").value
      );
      if (name && !isNaN(value)) {
        const newItem = { name, value };
        expenses.unshift(newItem);
        addItemToList(expensesList, newItem);
        document.getElementById("new-item-expenses").value = "";
        document.getElementById("new-item-expenses-value").value = "";
        refreshItemList();
        updateTotalValues();
      }
    });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ—Ö–æ–¥–æ–≤
  document
    .getElementById("add-income-button")
    .addEventListener("click", function () {
      const name = document.getElementById("new-item-income").value;
      const value = parseFloat(
        document.getElementById("new-item-income-value").value
      );
      if (name && !isNaN(value)) {
        const newItem = { name, value };
        income.unshift(newItem);
        addItemToList(incomeList, newItem);
        document.getElementById("new-item-income").value = "";
        document.getElementById("new-item-income-value").value = "";
        refreshItemList();
        updateTotalValues();
      }
    });
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
  function editItem(list, index) {
    const item = list[index];
    const newName = prompt("Nowa nazwa:", item.name);
    const newValue = parseFloat(prompt("Nowa kwota:", item.value));
    if (newName !== null && !isNaN(newValue)) {
      item.name = newName;
      item.value = newValue;
      list[index] = item;
      // –û–±–Ω–æ–≤–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –≤ Local Storage
      localStorage.setItem("expenses", JSON.stringify(expenses));
      localStorage.setItem("income", JSON.stringify(income));
      updateTotalValues();
      // –ü–µ—Ä–µ—Å—Ç—Ä–æ–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      refreshItemList();
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
  function deleteItem(list, index) {
    list.splice(index, 1);
    // –£–¥–∞–ª–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –∏–∑ Local Storage
    localStorage.setItem("expenses", JSON.stringify(expenses));
    localStorage.setItem("income", JSON.stringify(income));
    updateTotalValues();
    // –ü–µ—Ä–µ—Å—Ç—Ä–æ–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    refreshItemList();
  }
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–∏—Å–∫–∞
  function refreshItemList() {
    // –û—á–∏—Å—Ç–∏—Ç–µ —Å–ø–∏—Å–æ–∫
    expensesList.innerHTML = "";
    incomeList.innerHTML = "";

    // –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    expenses.forEach((expense, index) => {
      const li = document.createElement("li");
      li.textContent = `${expense.name} - ${expense.value} z≈Ç`;
      const editDiv = document.createElement("div");
      const editButton = document.createElement("button");
      editButton.textContent = "‚úèÔ∏è";
      editButton.title = "Edytuj";
      const deleteButton = document.createElement("button");
      deleteButton.textContent = "üóëÔ∏è";
      deleteButton.title = "Usu≈Ñ";

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      editButton.addEventListener("click", () => editItem(expenses, index));

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
      deleteButton.addEventListener("click", () => deleteItem(expenses, index));

      li.classList.add(
        "flex",
        "justify-between",
        "bg-white",
        "rounded-lg",
        "mb-4",
        "p-2"
      );
      editButton.classList.add("mr-2");
      li.appendChild(editDiv);
      editDiv.appendChild(editButton);
      editDiv.appendChild(deleteButton);

      expensesList.appendChild(li);
    });

    income.forEach((item, index) => {
      const li = document.createElement("li");
      li.textContent = `${item.name} - ${item.value} z≈Ç`;
      const editDiv = document.createElement("div");
      const editButton = document.createElement("button");
      editButton.textContent = "‚úèÔ∏è";
      editButton.title = "Edytuj";
      const deleteButton = document.createElement("button");
      deleteButton.textContent = "üóëÔ∏è";
      deleteButton.title = "Usu≈Ñ";

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      editButton.addEventListener("click", () => editItem(income, index));

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
      deleteButton.addEventListener("click", () => deleteItem(income, index));

      li.classList.add(
        "flex",
        "justify-between",
        "bg-white",
        "rounded-lg",
        "mb-4",
        "p-2"
      );
      editButton.classList.add("mr-2");
      li.appendChild(editDiv);
      editDiv.appendChild(editButton);
      editDiv.appendChild(deleteButton);
      incomeList.appendChild(li);
    });
  }

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  refreshItemList();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  updateTotalValues();
});
